<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.basketMapper">

<select id="menuList" parameterType="model.MenuTitleDTO" resultType="model.MenuDTO">
	SELECT MENU_ID menuId, MENU_NAME menuName, MENU_PRICE menuPrice, MENU_IMG menuImg, SELL sell, 
	MENU_EXPLAIN menuExplain, MENU_CHOICE menuChoice, COM_ID comId, MENUTITLE_NUM menuTitleNum
	FROM MENU
	WHERE COM_ID = #{comId} AND MENUTITLE_NUM = #{menuTitleNum}
</select>

<select id="menuDetail" parameterType="string" resultType="model.MenuDTO">
	SELECT MENU_ID menuId, MENU_NAME menuName, MENU_PRICE menuPrice, MENU_IMG menuImg, SELL sell, 
	MENU_EXPLAIN menuExplain, MENU_CHOICE menuChoice, COM_ID comId, MENUTITLE_NUM menuTitleNum
	FROM MENU
	WHERE MENU_ID = #{menuId}
</select>

<insert id="addCart" parameterType="model.BasketDTO">
	INSERT INTO BASKET (MEM_ID, MENU_ID, COM_ID, MENU_PRICE, MENU_COUNT)
	VALUES (#{memId,jdbcType=VARCHAR}, #{menuId,jdbcType=VARCHAR}, #{comId,jdbcType=VARCHAR}, #{menuPrice,jdbcType=VARCHAR}, #{menuCount,jdbcType=VARCHAR})
</insert>

<select id="cartList" parameterType="string" resultType="model.BasketDTO">
	SELECT B.MEM_ID memId, B.MENU_ID menuId, M.MENU_IMG menuImg, M.MENU_NAME menuName, M.MENU_PRICE menuPrice, 
	B.MENU_COUNT menuCount, M.COM_ID comId, (M.MENU_PRICE*B.MENU_COUNT) totalPrice
	FROM BASKET B
	INNER JOIN MENU M
	ON B.MENU_ID = M.MENU_ID AND B.MEM_ID = #{memId}    
</select>

<delete id="cartOneDel" parameterType="model.BasketDTO">
	DELETE FROM BASKET WHERE MEM_ID = #{memId} AND MENU_ID = #{menuId}
</delete>

<delete id="cartAllDel">
	DELETE FROM BASKET WHERE MEM_ID = #{memId}
</delete>

<select id="cartCheck" parameterType="string" resultType="string">
	SELECT DISTINCT COM_ID FROM BASKET WHERE MEM_ID = #{memId}
</select>

<select id="comCheck" parameterType="string" resultType="string">
	SELECT DISTINCT COM_ID 
	FROM BASKET 
	WHERE MEM_ID = #{memId}
</select>

<insert id="payInsert" parameterType="model.OrderDTO">

	INSERT INTO ORDERLIST(ORDER_NUM, ORDERDATE, METHODSPAYMENT,ORDER_RESULT, 
	ORDER_ADDRESS,ORDER_REQUEST,COM_ID,ORDERSTATE,MEM_ID,TOTALPRICE)
	VALUES (#{orderNum ,jdbcType=VARCHAR },#{orderDate,jdbcType=VARCHAR},#{methodsPayment,jdbcType=VARCHAR},#{orderResult,jdbcType=VARCHAR},
	#{orderAddress,jdbcType=VARCHAR},#{orderRequest,jdbcType=VARCHAR},
	#{comId,jdbcType=VARCHAR},#{orderState,jdbcType=VARCHAR},#{memId,jdbcType=VARCHAR},#{totalPrice,jdbcType=VARCHAR})

</insert>

<select id ="orderNum" resultType="string">
	select max(ORDER_NUM) + 1 FROM ORDERLIST
</select>

<select id="paymentCk" parameterType="string" resultType="command.PaymentCommand">

	SELECT O.MEM_ID MEMID,O.ORDER_ADDRESS orderAddress,
	U.MEM_PHONE memPhone,O.ORDER_REQUEST orderRequest, O.METHODSPAYMENT methodsPayment,
	C.DELIVERYPAY deliveryPay, O.TOTALPRICE totalPrice
   	FROM ORDERLIST O
   	INNER JOIN USERMEMBER U
   	ON O.MEM_ID = U.MEM_ID
   	INNER JOIN COMPANY C
   	ON O.COM_ID = C.COM_ID
   	WHERE O.ORDER_NUM = #{orderNum}
	

</select>

<select id="orderList" parameterType="string" resultType="model.OrderListDTO">

	SELECT O.ORDER_NUM orderNum, C.COM_IMG comImg,C.COM_NAME comName,O.TOTALPRICE totalPrice ,R.REVIEWCHECK reviewCheck
	FROM ORDERLIST O
	LEFT JOIN REVIEW R
	ON O.ORDER_NUM = R.ORDER_NUM
	INNER JOIN COMPANY C
	ON O.COM_ID = C.COM_ID AND MEM_ID = #{memId}
	ORDER BY O.ORDER_NUM DESC


</select>

<select id="listMenuName" parameterType="string" resultType="model.MenuInfoDTO">

	SELECT M.MENU_NAME menuName,M.MENU_PRICE menuPrice ,C.MENU_COUNT menuCount
	FROM MENU M
	INNER JOIN CART C
	ON M.MENU_ID = C.MENU_ID AND C.ORDER_NUM = #{orderNum}


</select>


<select id="addrList" parameterType="string" resultType="model.AddrListDTO">

	SELECT DISTINCT ORDER_ADDRESS orderAddress
	FROM(
	SELECT ORDER_ADDRESS
	FROM ORDERLIST
	WHERE MEM_ID = #{memID}
	ORDER BY ORDER_NUM DESC
	)

</select>

<insert id="addReview" parameterType="model.ReviewDTO">

	INSERT INTO REVIEW(ORDER_NUM, REVIEW_CONTENT, REVIEW_STAR, REVIEW_IMG, REVIEW_DATE, REVIEWCHECK)
	VALUES (#{orderNum },#{reviewContent},#{reviewStar},#{reviewImg},#{reviewDate},#{reviewCheck})

</insert>

<insert id="cartInsert" parameterType="model.CartDTO">

	INSERT INTO CART(ORDER_NUM, MENU_ID, MENU_COUNT)
	VALUES (#{orderNum },#{menuId},#{menuCount})

</insert>




</mapper>