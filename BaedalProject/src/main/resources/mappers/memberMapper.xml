<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.memberMapper">

<insert id="memJoin" parameterType="model.MemberDTO">
	INSERT INTO USERMEMBER(MEM_ID, MEM_PW, MEM_NICKNAME, MEM_EMAIL, MEM_PHONE)
	VALUES(#{memId}, #{memPw}, #{memNickName}, #{memEmail}, #{memPhone})
</insert>

<select id="idDupChk" parameterType="string" resultType="int">
	SELECT COUNT(MEM_ID) FROM USERMEMBER WHERE MEM_ID = #{memId}	
</select>

<select id="emailDupChk" parameterType="string" resultType="int">
	SELECT COUNT(MEM_EMAIL) FROM USERMEMBER WHERE MEM_EMAIL = #{memEmail}
</select>

<select id="memDetail" parameterType="string" resultType="model.MemberDTO">
	SELECT MEM_ID memId, MEM_PW memPw, MEM_NICKNAME memNickName, MEM_EMAIL memEmail, MEM_PHONE memPhone, ORDER_ADDRESS orderAddress
	FROM USERMEMBER WHERE MEM_ID = #{memId}
</select>

<update id="memUpdate" parameterType="model.MemberDTO">
	UPDATE USERMEMBER
	SET MEM_NICKNAME = #{memNickName}, MEM_EMAIL = #{memEmail}, MEM_PHONE = #{memPhone} 
	WHERE MEM_ID = #{memId}
</update>

<update id="memPwUpdate" parameterType="model.MemberDTO">
	UPDATE USERMEMBER
	SET MEM_PW = #{memPw} WHERE MEM_ID = #{memId} 
</update>

<select id="findId" parameterType="model.MemberDTO" resultType="string">
	SELECT MEM_ID memId FROM USERMEMBER WHERE MEM_EMAIL = #{memEmail} AND MEM_PHONE = #{memPhone}
</select>

<delete id="memQuit" parameterType="string">
	DELETE FROM USERMEMBER WHERE MEM_ID = #{memId}
</delete>

<select id="basketList" parameterType="string" resultType="model.BasketDTO">

	SELECT BASKET_NUM basketNum, MENU_IMG menuImg, MENU_NAME menuName, M.MENU_PRICE menuPrice, 
	MENU_COUNT menuCount, (M.MENU_PRICE*MENU_COUNT) totalPrice
	FROM MENU M, BASKET B
	WHERE M.MENU_ID = B.MENU_ID AND B.MEM_ID = #{memId} 
	
</select>

<delete id="basketDel" parameterType="string">

	DELETE FROM BASKET WHERE BASKET_NUM = #{basketNum}

</delete>

<select id="wishStoreList" parameterType="string" resultType="model.ShopDTO">
	SELECT C.COM_ID comId, COM_NUM comNum, CEO_NAME ceoName, COM_NAME comName, COM_IMG comImg, COM_ADDRESS comAddress, 
	COM_CATEGORY comCategory, COM_HALL comHall, DELIVERYPAY deliveryPay, CEO_ID ceoId, COM_NOTICE comNotice, 
	MIN_PRICE minPrice, MENU_CATEGORY menuCategory, DELIVERYZONE deliveryZone, ORIGIN origin, PRINTFLYERS printFlyers, 
	BUSINESSTIME businessTime, SALESDECLARATION salesDeclaration, COM_NOTICE_IMG comNoticeImg, FREEDELIVERY freeDelivery,
	COM_PHONE comPhone 
	FROM COMPANY C RIGHT JOIN LIKES L ON (C.COM_ID = L.COM_ID) WHERE L.MEM_ID = #{memId}
</select>

<select id="reviewList" parameterType="string" resultType="command.MyReviewCommand">

	 SELECT C.COM_NAME comName, C.COM_IMG comImg, O.ORDER_NUM orderNum, R.REVIEW_STAR reviewStar
	 FROM ORDERLIST O
	 INNER JOIN REVIEW R
	 ON O.ORDER_NUM = R.ORDER_NUM
	 INNER JOIN COMPANY C
	 ON O.COM_ID = C.COM_ID AND O.MEM_ID = #{memId}
	 ORDER BY O.ORDER_NUM DESC

</select>


<select id="reviewDetail" parameterType="string" resultType="command.ReviewDetailCommand">

	   SELECT R.ORDER_NUM orderNum, R.REVIEW_CONTENT reviewContent, R.REVIEW_STAR reviewStar, 
	   R.REVIEW_IMG reviewImg, R.REVIEW_DATE reviewDate, R.CEOREPLIES ceoReplies, M.MENU_NAME menuName
	   FROM REVIEW R
	   INNER JOIN ORDERLIST O
	   ON R.ORDER_NUM = O.ORDER_NUM
	   INNER JOIN MENU M
	   ON O.MENU_ID = M.MENU_ID AND R.ORDER_NUM = #{orderNum}

</select>




</mapper>